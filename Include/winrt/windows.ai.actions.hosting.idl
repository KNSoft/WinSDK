//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.AI.Actions.idl";

// Forward Declare
namespace Windows
{
    namespace AI
    {
        namespace Actions
        {
            typedef enum ActionEntityKind ActionEntityKind;

            runtimeclass ActionInvocationContext;

            apicontract ActionsContract;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        interface IClosable;
    }
}
namespace Windows
{
    namespace AI
    {
        namespace Actions
        {
            namespace Hosting
            {
                interface IActionCatalog;

                interface IActionDefinition;

                interface IActionEntityRegistrationInfo;

                interface IActionOverload;

                runtimeclass ActionCatalog;

                runtimeclass ActionDefinition;

                runtimeclass ActionEntityRegistrationInfo;

                runtimeclass ActionOverload;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace AI
    {
        namespace Actions
        {
            namespace Hosting
            {
                declare
                {
                    interface Windows.Foundation.TypedEventHandler<Windows.AI.Actions.Hosting.ActionCatalog*, IInspectable*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace AI
    {
        namespace Actions
        {
            namespace Hosting
            {
                [contract(Windows.AI.Actions.ActionsContract, 1.0)]
                [exclusiveto(Windows.AI.Actions.Hosting.ActionCatalog)]
                [experimental]
                [uuid(DBE7C537-66EA-5394-9085-4FC19D78375C)]
                interface IActionCatalog : IInspectable
                {
                    HRESULT GetAllActions([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.AI.Actions.Hosting.ActionDefinition*** result);
                    [eventadd] HRESULT Changed([in] Windows.Foundation.TypedEventHandler<Windows.AI.Actions.Hosting.ActionCatalog*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Changed([in] EventRegistrationToken token);
                }

                [contract(Windows.AI.Actions.ActionsContract, 1.0)]
                [exclusiveto(Windows.AI.Actions.Hosting.ActionDefinition)]
                [experimental]
                [uuid(FE766ADD-924D-5231-855E-DAC9E82C7E6C)]
                interface IActionDefinition : IInspectable
                {
                    [propget] HRESULT Id([out] [retval] HSTRING* value);
                    [propget] HRESULT Description([out] [retval] HSTRING* value);
                    [propget] HRESULT IconFullPath([out] [retval] HSTRING* value);
                    [propget] HRESULT PackageFamilyName([out] [retval] HSTRING* value);
                    HRESULT GetInputs([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.AI.Actions.Hosting.ActionEntityRegistrationInfo*** result);
                    HRESULT GetOutputs([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.AI.Actions.Hosting.ActionEntityRegistrationInfo*** result);
                    HRESULT GetOverloads([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.AI.Actions.Hosting.ActionOverload*** result);
                }

                [contract(Windows.AI.Actions.ActionsContract, 1.0)]
                [exclusiveto(Windows.AI.Actions.Hosting.ActionEntityRegistrationInfo)]
                [experimental]
                [uuid(C3B92BDB-03C3-5A9E-B049-002FA0405699)]
                interface IActionEntityRegistrationInfo : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propput] HRESULT Name([in] HSTRING value);
                    [propget] HRESULT Kind([out] [retval] Windows.AI.Actions.ActionEntityKind* value);
                    [propput] HRESULT Kind([in] Windows.AI.Actions.ActionEntityKind value);
                }

                [contract(Windows.AI.Actions.ActionsContract, 1.0)]
                [exclusiveto(Windows.AI.Actions.Hosting.ActionOverload)]
                [experimental]
                [uuid(5D184610-D09D-5375-9849-505C359DCA01)]
                interface IActionOverload : IInspectable
                {
                    [propget] HRESULT DescriptionTemplate([out] [retval] HSTRING* value);
                    HRESULT GetInputs([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.AI.Actions.Hosting.ActionEntityRegistrationInfo*** result);
                    HRESULT InvokeAsync([in] Windows.AI.Actions.ActionInvocationContext* context, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                }

                [contract(Windows.AI.Actions.ActionsContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ActionCatalog
                {
                    [default] [experimental] interface Windows.AI.Actions.Hosting.IActionCatalog;
                    interface Windows.Foundation.IClosable;
                }

                [contract(Windows.AI.Actions.ActionsContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ActionDefinition
                {
                    [default] [experimental] interface Windows.AI.Actions.Hosting.IActionDefinition;
                    interface Windows.Foundation.IClosable;
                }

                [contract(Windows.AI.Actions.ActionsContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ActionEntityRegistrationInfo
                {
                    [default] [experimental] interface Windows.AI.Actions.Hosting.IActionEntityRegistrationInfo;
                    interface Windows.Foundation.IClosable;
                }

                [contract(Windows.AI.Actions.ActionsContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ActionOverload
                {
                    [default] [experimental] interface Windows.AI.Actions.Hosting.IActionOverload;
                    interface Windows.Foundation.IClosable;
                }
            }
        }
    }
}
