//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.AI.Actions.Hosting.idl";

// Forward Declare
namespace Windows
{
    namespace AI
    {
        namespace Actions
        {
            namespace Hosting
            {
                runtimeclass ActionCatalog;
            }
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;
    }
}
namespace Windows
{
    namespace AI
    {
        namespace Actions
        {
            apicontract ActionsContract;

            typedef enum ActionEntityKind ActionEntityKind;

            typedef enum ActionInvocationResult ActionInvocationResult;

            interface IActionEntity;

            interface IActionEntityDisplayInfo;

            interface IActionEntityFactory;

            interface IActionEntityFactory2;

            interface IActionEntityFactoryFactory;

            interface IActionInvocationContext;

            interface IActionRuntime;

            interface IActionRuntimeFactory;

            interface IDocumentActionEntity;

            interface IFileActionEntity;

            interface INamedActionEntity;

            interface IPhotoActionEntity;

            interface ITextActionEntity;

            runtimeclass ActionEntity;

            runtimeclass ActionEntityDisplayInfo;

            runtimeclass ActionEntityFactory;

            runtimeclass ActionInvocationContext;

            runtimeclass ActionRuntime;

            runtimeclass DocumentActionEntity;

            runtimeclass FileActionEntity;

            runtimeclass NamedActionEntity;

            runtimeclass PhotoActionEntity;

            runtimeclass TextActionEntity;
        }
    }
}

// Generic instantiations

// Type definition
namespace Windows
{
    namespace AI
    {
        namespace Actions
        {
            [contractversion(1.0)]
            apicontract ActionsContract
            {
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            enum ActionEntityKind
            {
                None     = 0,
                Document = 1,
                File     = 2,
                Photo    = 3,
                Text     = 4
            };

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            enum ActionInvocationResult
            {
                Success      = 0,
                UserCanceled = 1,
                Unsupported  = 2,
                Unavailable  = 3
            };

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.ActionEntity)]
            [experimental]
            [uuid(445E700F-2122-5668-9A16-4CAB2982C5F4)]
            interface IActionEntity : IInspectable
            {
                [propget] HRESULT Kind([out] [retval] Windows.AI.Actions.ActionEntityKind* value);
                [propget] HRESULT DisplayInfo([out] [retval] Windows.AI.Actions.ActionEntityDisplayInfo** value);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.ActionEntityDisplayInfo)]
            [experimental]
            [uuid(057A9EDE-03E1-55C6-ACBA-C7056216735A)]
            interface IActionEntityDisplayInfo : IInspectable
            {
                [propget] HRESULT Title([out] [retval] HSTRING* value);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.ActionEntity)]
            [experimental]
            [uuid(9CB752A0-5BF8-5BE2-916E-B00EFF80088D)]
            interface IActionEntityFactory : IInspectable
            {
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.ActionEntityFactory)]
            [experimental]
            [uuid(EA2FB6A5-EC6D-5180-9D30-BC663B84E7B8)]
            interface IActionEntityFactory2 : IInspectable
            {
                HRESULT CreateFileEntity([in] HSTRING path, [out] [retval] Windows.AI.Actions.FileActionEntity** result);
                HRESULT CreateDocumentEntity([in] HSTRING path, [out] [retval] Windows.AI.Actions.DocumentActionEntity** result);
                HRESULT CreatePhotoEntity([in] HSTRING path, [out] [retval] Windows.AI.Actions.PhotoActionEntity** result);
                HRESULT CreateTextEntity([in] HSTRING text, [out] [retval] Windows.AI.Actions.TextActionEntity** result);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.ActionEntityFactory)]
            [experimental]
            [uuid(C9147D8F-88A0-5EC0-A564-47E2A1081412)]
            interface IActionEntityFactoryFactory : IInspectable
            {
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.ActionInvocationContext)]
            [experimental]
            [uuid(8D8DE82E-BF94-51A4-A0E9-DC5014948184)]
            interface IActionInvocationContext : IInspectable
            {
                [propget] HRESULT ActionName([out] [retval] HSTRING* value);
                [propget] HRESULT EntityFactory([out] [retval] Windows.AI.Actions.ActionEntityFactory** value);
                [propget] HRESULT InvokerAumid([out] [retval] HSTRING* value);
                HRESULT SetInputEntity([in] HSTRING inputName, [in] Windows.AI.Actions.ActionEntity* inputValue);
                HRESULT GetInputEntities([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.AI.Actions.NamedActionEntity*** result);
                HRESULT SetOutputEntity([in] HSTRING outputName, [in] Windows.AI.Actions.ActionEntity* outputValue);
                HRESULT GetOutputEntities([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.AI.Actions.NamedActionEntity*** result);
                [propget] HRESULT Result([out] [retval] Windows.AI.Actions.ActionInvocationResult* value);
                [propput] HRESULT Result([in] Windows.AI.Actions.ActionInvocationResult value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
                [propput] HRESULT ExtendedError([in] HRESULT value);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.ActionRuntime)]
            [experimental]
            [uuid(206EFA2C-C909-508A-B4B0-9482BE96DB9C)]
            interface IActionRuntime : IInspectable
            {
                [propget] HRESULT ActionCatalog([out] [retval] Windows.AI.Actions.Hosting.ActionCatalog** value);
                [propget] HRESULT EntityFactory([out] [retval] Windows.AI.Actions.ActionEntityFactory** value);
                HRESULT CreateInvocationContext([in] HSTRING actionName, [out] [retval] Windows.AI.Actions.ActionInvocationContext** result);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.ActionRuntime)]
            [experimental]
            [uuid(D3F366E9-8DC9-50A0-8040-E5C14FA609D6)]
            interface IActionRuntimeFactory : IInspectable
            {
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.DocumentActionEntity)]
            [experimental]
            [uuid(56715297-960B-59FF-AF4B-ECE1098B2E36)]
            interface IDocumentActionEntity : IInspectable
            {
                [propget] HRESULT FullPath([out] [retval] HSTRING* value);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.FileActionEntity)]
            [experimental]
            [uuid(F20AB43F-4C80-5904-BD42-3E6248BABFCF)]
            interface IFileActionEntity : IInspectable
            {
                [propget] HRESULT FullPath([out] [retval] HSTRING* value);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.NamedActionEntity)]
            [experimental]
            [uuid(1AAEBEEF-435B-5A0D-8182-05FE4DD47712)]
            interface INamedActionEntity : IInspectable
            {
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propput] HRESULT Name([in] HSTRING value);
                [propget] HRESULT Entity([out] [retval] Windows.AI.Actions.ActionEntity** value);
                [propput] HRESULT Entity([in] Windows.AI.Actions.ActionEntity* value);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.PhotoActionEntity)]
            [experimental]
            [uuid(425123B3-20EF-51A6-B35F-8414384765C5)]
            interface IPhotoActionEntity : IInspectable
            {
                [propget] HRESULT FullPath([out] [retval] HSTRING* value);
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [exclusiveto(Windows.AI.Actions.TextActionEntity)]
            [experimental]
            [uuid(3C4EC25F-5ADB-5F73-B8F3-080FBEADD612)]
            interface ITextActionEntity : IInspectable
            {
                [propget] HRESULT Text([out] [retval] HSTRING* value);
            }

            [composable(Windows.AI.Actions.IActionEntityFactory, public, Windows.AI.Actions.ActionsContract, 1.0)]
            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ActionEntity
            {
                [default] [experimental] interface Windows.AI.Actions.IActionEntity;
                interface Windows.Foundation.IClosable;
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass ActionEntityDisplayInfo
            {
                [default] [experimental] interface Windows.AI.Actions.IActionEntityDisplayInfo;
                interface Windows.Foundation.IClosable;
            }

            [composable(Windows.AI.Actions.IActionEntityFactoryFactory, public, Windows.AI.Actions.ActionsContract, 1.0)]
            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ActionEntityFactory
            {
                [default] [experimental] interface Windows.AI.Actions.IActionEntityFactory2;
                interface Windows.Foundation.IClosable;
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass ActionInvocationContext
            {
                [default] [experimental] interface Windows.AI.Actions.IActionInvocationContext;
                interface Windows.Foundation.IClosable;
            }

            [composable(Windows.AI.Actions.IActionRuntimeFactory, public, Windows.AI.Actions.ActionsContract, 1.0)]
            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ActionRuntime
            {
                [default] [experimental] interface Windows.AI.Actions.IActionRuntime;
                interface Windows.Foundation.IClosable;
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass DocumentActionEntity : Windows.AI.Actions.ActionEntity
            {
                [default] [experimental] interface Windows.AI.Actions.IDocumentActionEntity;
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass FileActionEntity : Windows.AI.Actions.ActionEntity
            {
                [default] [experimental] interface Windows.AI.Actions.IFileActionEntity;
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass NamedActionEntity
            {
                [default] [experimental] interface Windows.AI.Actions.INamedActionEntity;
                interface Windows.Foundation.IClosable;
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass PhotoActionEntity : Windows.AI.Actions.ActionEntity
            {
                [default] [experimental] interface Windows.AI.Actions.IPhotoActionEntity;
            }

            [contract(Windows.AI.Actions.ActionsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass TextActionEntity : Windows.AI.Actions.ActionEntity
            {
                [default] [experimental] interface Windows.AI.Actions.ITextActionEntity;
            }
        }
    }
}
